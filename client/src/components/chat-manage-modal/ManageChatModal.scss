@import "../../styles/Extensions";

.manage {
  padding: 0 !important;

  &.modal-content > * {
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
  }

  & > .modal-body {
    min-height: 110px;
    padding: 0;
    display: block;

    & > .wrapper {
      overflow-y: auto;
      padding: 20px;

      &.f-r {
        height: 70px;
      }

      button {
        width: 200px;
        min-height: 50px;
        @include columnGap(25px);

        svg {
          width: 15px;
          height: 15px;
        }
      }

      form {
        grid-template-rows: repeat(2, minmax(10px, 1fr)) 30px 90px;
        grid-template-columns: minmax(10px, 1fr);
        row-gap: 20px;
      }
    }

    .users {
      box-sizing: border-box;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      padding: 20px;
    }

    .del-cont {
      padding-block: 20px;

      & > .btn-pr {
        &:hover {
          letter-spacing: 2px;
          color: $black;

          &:before,
          &:after {
            background: $error-100;
          }
        }

        &:active {
          &:before,
          &:after {
            background: $error-100;
          }
        }

        &:focus {
          &:before,
          &:after {
            background: $error-100;
          }
        }

        &:focus-visible {
          &:before,
          &:after {
            background: $error-100;
          }
        }

        &:focus-within {
          &:before,
          &:after {
            background: $error-100;
          }
        }

        &:-moz-focusring {
          &:before,
          &:after {
            background: $error-100;
          }
        }

        &.active {
          &:before,
          &:after {
            background: $error-100;
          }
        }
      }
    }

    .enlarge {
      @include animation(enlarge, 1ms, ease-in-out, forwards);
      @include transform-origin(top);
    }

    .reduce {
      @include animation(reduce, 250ms, ease-in-out, forwards);
      @include transform-origin(top);
    }

    .show-form {
      @include animation(show-form, 250ms, ease-in-out, forwards);
      @include transform-origin(top);
    }

    .hide-form {
      @include animation(hide-form, 250ms, ease-in-out, forwards);
      @include transform-origin(top);
    }
  }
}

@include keyframes(show-form) {
  from {
    @include transform(scale(1, 0));
  }
  to {
    @include transform(scale(1, 1));
  }
}

@include keyframes(hide-form) {
  from {
    @include transform(scale(1, 1));
  }
  to {
    @include transform(scale(1, 0));
  }
}

@include keyframes(enlarge) {
  from {
    height: 70px;
  }
  to {
    height: 500px;
  }
}

@include keyframes(reduce) {
  from {
    height: 500px;
  }
  to {
    height: 70px;
  }
}

@media only screen and (min-width: 501px) {
  .modal-content.manage {
    width: 340px;
  }
}

@media only screen and (max-width: 500px) {
  .modal-content.manage {
    width: auto;
  }
}
